{"version":3,"sources":["images/download (3).png","components/Navigation.tsx","data/skills.ts","components/SkillBar.tsx","components/SkillsChart.tsx","components/AboutMe.tsx","data/experience.ts","components/Experience.tsx","components/Projects.tsx","hooks/useIsMobile.js","components/reusable/Button.tsx","components/TopSection.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navigation","hidden","currentSection","Navbar","bg","expand","className","fixed","Toggle","aria-controls","Collapse","Nav","Link","href","active","skills","name","percentage","SkillBar","useState","isOpen","setIsOpen","style","width","onClick","SkillsChart","map","skill","image","require","AboutMe","setAboutMeHeight","ref","useRef","useEffect","current","console","log","clientHeight","id","Image","src","thumbnail","roundedCircle","experience","company","position","lengthOfService","duties","Experience","Projects","useIsMobile","window","innerWidth","isMobile","setIsMobile","handleResize","addEventListener","removeEventListener","Button","children","primary","small","props","type","padding","TopSection","setHeight","params","particles","number","value","size","move","speed","Main","height","aboutMeHeight","setCurrentSection","showNav","setShowNav","useScrollPosition","currPos","y","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.12a3e483.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download (3).0d238de0.png\";","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\ntype props = {\r\n  hidden: boolean;\r\n  currentSection: string | null;\r\n};\r\n\r\nconst Navigation = ({ hidden, currentSection }: props) =>\r\n  hidden ? null : (\r\n    <Navbar bg=\"light\" expand className=\"navigation\" fixed=\"top\">\r\n      {/* <Navbar.Brand href=\"#home\">Sam Fullen</Navbar.Brand> */}\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse className=\"justify-content-center\">\r\n        <Nav>\r\n          <Nav.Link href=\"#about\" active={currentSection === \"about\"}>\r\n            About Me\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#experience\" active={currentSection === \"experience\"}>\r\n            Experience\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#projects\">Projects</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n\r\nexport default Navigation;\r\n","interface Skill {\r\n  name: string;\r\n  percentage: number;\r\n}\r\n\r\ninterface Skills extends Array<Skill> {}\r\n\r\nconst skills: Skills = [\r\n  {\r\n    name: \"React JS\",\r\n    percentage: 90,\r\n  },\r\n  {\r\n    name: \"Express JS\",\r\n    percentage: 85,\r\n  },\r\n  { name: \"Lambda\", percentage: 80 },\r\n  { name: \"Typescript\", percentage: 65 },\r\n  { name: \"PHP\", percentage: 70 },\r\n  { name: \"HTML\", percentage: 90 },\r\n  { name: \"CSS\", percentage: 85 },\r\n  { name: \"GIT\", percentage: 90 },\r\n  { name: \"Agile\", percentage: 75 },\r\n  { name: \"TDD\", percentage: 50 },\r\n  { name: \"MySql\", percentage: 70 },\r\n];\r\n\r\nexport default skills;\r\n","import React, { useState } from \"react\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  percentage: number;\r\n};\r\n\r\nconst SkillBar = ({ name, percentage }: Props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"skills__bar\">\r\n        <span className=\"skills__bar--name\">{name}</span>\r\n        <span className=\"skills__bar--percentage-background\">\r\n          <span\r\n            className=\"skills__bar--percentage\"\r\n            style={{ width: `${percentage - 10}%` }}\r\n          >\r\n            {percentage}%\r\n          </span>\r\n          <span\r\n            className=\"skills__bar--dropdown-button\"\r\n            onClick={() => setIsOpen(!isOpen)}\r\n          >\r\n            <i className={`fas fa-caret-${isOpen ? \"up\" : \"down\"}`} />\r\n          </span>\r\n        </span>\r\n      </div>\r\n      {isOpen && <div className=\"skills__bar--dropdown\">More info</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkillBar;\r\n","import React from \"react\";\r\nimport skills from \"../data/skills\";\r\nimport SkillBar from \"./SkillBar\";\r\n\r\nconst SkillsChart = () => (\r\n  <div className=\"skills\">\r\n    {skills.map((skill) => (\r\n      <SkillBar {...skill} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default SkillsChart;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Image, Row, Col } from \"react-bootstrap\";\r\nimport SkillsChart from \"./SkillsChart\";\r\n\r\nconst image = require(\"../images/download (3).png\");\r\n\r\ntype BreakProps = {\r\n  double?: boolean;\r\n};\r\nconst Break = ({ double }: BreakProps) => (\r\n  <>\r\n    <br />\r\n    {double && <br />}\r\n  </>\r\n);\r\n\r\ntype ListProps = {\r\n  items: Array<string>;\r\n};\r\nconst List = ({ items }: ListProps) => {\r\n  return (\r\n    <div className=\"list\">\r\n      {items.map((item: string, index: number) => (\r\n        <>\r\n          {(index + 1) % 2 === 0 ? (\r\n            <span>\r\n              - <strong>{item}</strong>\r\n              <Break />\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              - <strong>{item}</strong>\r\n            </span>\r\n          )}\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype props = {\r\n  setAboutMeHeight: (e: number) => void;\r\n};\r\n\r\nconst AboutMe = ({ setAboutMeHeight }: props) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      console.log(ref.current.clientHeight);\r\n      setAboutMeHeight(ref.current.clientHeight);\r\n    }\r\n  }, [setAboutMeHeight]);\r\n\r\n  return (\r\n    <div className=\"section about\" ref={ref}>\r\n      <div id=\"about\" className=\"anchor\" />\r\n      {/* <h1 className=\"about__name\">Sam Fullen</h1>\r\n    <h2 className=\"about__subtitle\">JavaScript Developer</h2>\r\n    <div className=\"about__contact-container\">\r\n      <span>sam_fullen2@hotmail.co.uk</span>\r\n      <span>07816223236</span>\r\n      <span>Manchester</span>\r\n    </div>\r\n    <hr /> */}\r\n      <div className=\"about__top\">\r\n        <div>\r\n          <Image\r\n            src={image}\r\n            thumbnail\r\n            roundedCircle\r\n            className=\"about__picture\"\r\n          />\r\n        </div>\r\n        <div className=\"about__top--details\">\r\n          <p className=\"about__top--name\">Sam Fullen</p>\r\n          <p className=\"about__top--location\">\r\n            <i className=\"fas fa-map-marker-alt\" />\r\n            Manchester\r\n          </p>\r\n          <p className=\"about__top--email\">\r\n            <i className=\"fas fa-envelope-square\" />\r\n            <a href=\"mailto:sam_fullen2@hotmail.co.uk\">\r\n              sam_fullen2@hotmail.co.uk\r\n            </a>\r\n          </p>\r\n          <p className=\"about__top--phone\">\r\n            <i className=\"fas fa-phone\" />\r\n            <a href=\"tel:07816223236\">07816223236</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <p className=\"about__text\">\r\n        A self-driven and motivated JavaScript developer with an emphasis on{\" \"}\r\n        <strong>React JS</strong>, and with varying levels of experience in{\" \"}\r\n        <strong>Node/Express/Typescript/AWS,</strong> striving to become an\r\n        all-round full stack developer.\r\n      </p>\r\n      <SkillsChart />\r\n      {/* <p className=\"about__text\">\r\n        Other key skills include:\r\n        <List items={[\"PHP\", \"MySql\", \"HTML/CSS\", \"SASS\", \"Lambda\", \"GIT\"]} />\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Used to working in Agile environments. Extremely comfortable in almost\r\n        all aspects of GIT version control, from controlling code flow on the\r\n        command line, to creating and reviewing Pull Requests on GitHub.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Adaptable to the varying needs of projects and companies, and open to\r\n        trying new technologies if they suit the project more readily than other\r\n        solutions; A big fan of learning on the job.\r\n        <Break double />\r\n        Varying levels of usage with the following AWS services\r\n        <List\r\n          items={[\r\n            \"Lambda\",\r\n            \"S3\",\r\n            \"Rekognition\",\r\n            \"EC2\",\r\n            \"Cognito\",\r\n            \"API Gateway\",\r\n            \"SES\",\r\n            \"CodeBuild\",\r\n            \"CodePipeline\",\r\n          ]}\r\n        />\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Experience with Test Driven Development, as well as other code quality\r\n        tools and techniques such as ESLint, Prop Types or Typescript, Prettier.\r\n      </p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","interface Experience {\r\n  company: string;\r\n  position: string;\r\n  lengthOfService: string;\r\n  duties: string;\r\n}\r\n\r\ninterface ExperienceItems extends Array<Experience> {}\r\n\r\nconst experience: ExperienceItems = [\r\n  {\r\n    company: \"Skiddle\",\r\n    position: \"Web/JavaScript Developer\",\r\n    lengthOfService: \"2019 - Ongoing\",\r\n    duties:\r\n      \"Focused on ReactJS to create a ‘Promotion Centre’ where promoters can post events.\",\r\n  },\r\n  {\r\n    company: \"Gear4Music Ltd\",\r\n    position: \"Web/JavaScript Developer\",\r\n    lengthOfService: \"2018 - 2019\",\r\n    duties:\r\n      \"Using ReactJS to create a returns system for Customer Services, to allow them to process and complete returns efficiently and effectively.\",\r\n  },\r\n  {\r\n    company: \"In Touch Networks\",\r\n    position: \"Web Developer / PHP Developer / Javascript Developer\",\r\n    lengthOfService: \"2016 - 2018\",\r\n    duties:\r\n      \"Time split between PHP and Javascript (React JS/Node JS), produced a fully working CRM for the sales team and a network portal for customers\",\r\n  },\r\n  {\r\n    company: \"Bright Future Software\",\r\n    position: \"Apprentice Software Developer\",\r\n    lengthOfService: \"2014 - 2016\",\r\n    duties: \"TODO\",\r\n  },\r\n];\r\n\r\nexport default experience;\r\n","import React from \"react\";\r\nimport experience from \"../data/experience\";\r\n\r\ntype ExpProps = {\r\n  company: string;\r\n  position: string;\r\n  lengthOfService: string;\r\n  duties: string;\r\n};\r\n\r\ntype company = string;\r\n\r\nconst Experience = () => (\r\n  <div className=\"section experience\">\r\n    <div id=\"experience\" className=\"anchor\" />\r\n    <h1>Experience</h1>\r\n    {experience.map(\r\n      ({ company, position, lengthOfService, duties }: ExpProps) => (\r\n        <p>{company}</p>\r\n      )\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\n\r\nconst Projects = () => (\r\n  <div className=\"section projects\">\r\n    <div id=\"projects\" className=\"anchor\" />\r\n    <h1>Projects</h1>\r\n  </div>\r\n);\r\n\r\nexport default Projects;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useIsMobile = () => {\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 576);\r\n\r\n  const handleResize = () => {\r\n    setIsMobile(window.innerWidth < 576);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [isMobile]);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport default useIsMobile;\r\n","import React from \"react\";\r\n\r\nimport \"../../App.scss\";\r\n\r\ntype props = {\r\n  children: React.ReactNode;\r\n  primary?: boolean;\r\n  className?: string;\r\n  small?: boolean;\r\n};\r\n\r\nconst Button = ({\r\n  children,\r\n  primary = true,\r\n  small = false,\r\n  ...props\r\n}: props) => {\r\n  const { className } = props;\r\n  return (\r\n    <button\r\n      {...props}\r\n      type=\"button\"\r\n      className={`custom-button ${primary && \"primary\"} ${className || \"\"}`}\r\n      style={{\r\n        width: small ? \"70%\" : \"100%\",\r\n        padding: !small ? \"15px 12px\" : \"12px 9px\",\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport useIsMobile from \"../hooks/useIsMobile\";\r\nimport Button from \"./reusable/Button\";\r\n\r\ntype Props = {\r\n  setHeight: (e: number) => void;\r\n};\r\n\r\nconst TopSection = ({ setHeight }: Props) => {\r\n  const isMobile = useIsMobile();\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      setHeight(ref.current.clientHeight);\r\n    }\r\n  }, [setHeight]);\r\n\r\n  const params = {\r\n    particles: {\r\n      number: {\r\n        value: isMobile ? 20 : 60,\r\n      },\r\n      size: {\r\n        value: 1.2,\r\n      },\r\n      move: {\r\n        speed: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-section\" ref={ref}>\r\n      <div className=\"particles-container\">\r\n        <Particles params={params} />\r\n      </div>\r\n      <div className=\"top-section__content-container\">\r\n        <div className=\"top-section__content\">\r\n          <h1 className=\"top-section__content--name\">Sam Fullen</h1>\r\n          <h1 className=\"top-section__content--subtitle\">\r\n            JavaScript Developer\r\n          </h1>\r\n          <div className=\"top-section__content--nav\">\r\n            <Button small>\r\n              <a href=\"#about\">\r\n                See my work <i className={\"fas fa-angle-down\"} />\r\n              </a>\r\n            </Button>\r\n            {/* <a href=\"#about\">About Me</a>\r\n            <a href=\"#experience\">Experience</a>\r\n            <a href=\"#projects\">Projects</a> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSection;\r\n","import React, { useState } from \"react\";\r\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\r\nimport \"../App.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navigation from \"./Navigation\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport Experience from \"./Experience\";\r\nimport Projects from \"./Projects\";\r\nimport TopSection from \"./TopSection\";\r\n\r\nconst Main = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [aboutMeHeight, setAboutMeHeight] = useState(0);\r\n  const [currentSection, setCurrentSection] = useState<string | null>(null);\r\n  const [showNav, setShowNav] = useState(false);\r\n\r\n  useScrollPosition(({ currPos }) => {\r\n    if (currPos.y <= -(height - height * 0.25)) {\r\n      setShowNav(true);\r\n    } else {\r\n      setShowNav(false);\r\n    }\r\n\r\n    if (currPos.y <= -(aboutMeHeight + height + 40)) {\r\n      setCurrentSection(\"experience\");\r\n    } else {\r\n      setCurrentSection(\"about\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Navigation hidden={!showNav} currentSection={currentSection} />\r\n\r\n      <div className=\"content-container\">\r\n        <TopSection setHeight={setHeight} />\r\n        <div className=\"main-content\">\r\n          <AboutMe setAboutMeHeight={setAboutMeHeight} />\r\n          <hr />\r\n          <Experience />\r\n          <hr />\r\n          <Projects />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Main from \"./components/Main\";\n\nconst App = () => (\n  <Switch>\n    <Route path=\"/\">\n      <Main />\n    </Route>\n  </Switch>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}